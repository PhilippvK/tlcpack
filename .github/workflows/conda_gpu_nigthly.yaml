name: Conda-GPU-Nightly

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
  schedule:
    - cron: '10 6 * * *' # 6:10 AM UTC

jobs:
  Build:
    strategy:
      fail-fast: false
      matrix:
        pkg: ['tlcpack', 'tlcpack-nightly']
        python-version: ["3.10"]
        config:
          # Unsupported (CMake sccache error)
          # - cuda: '10.2'
          #   image: 'philippvk/package-cu102:b2eab7a'
          # Conda forge is not shipping a cudnn package with support for CUDA 11.0
          # - cuda: '11.0'
          #   image: 'philippvk/package-cu110:b2eab7a'
          - cuda: '11.1'
            image: 'philippvk/package-cu111:b2eab7a'
          - cuda: '11.3'
            image: 'philippvk/package-cu113:b2eab7a'
          - cuda: '11.6'
            image: 'philippvk/package-cu116:b2eab7a'
          - cuda: '11.7'
            image: 'philippvk/package-cu117:b2eab7a'
          - cuda: '11.8'
            image: 'philippvk/package-cu118:a633238'
          - cuda: '12.1'
            image: 'philippvk/package-cu121:a633238'

    runs-on: ubuntu-latest

    steps:
    - name: Maximize build space
      uses: easimon/maximize-build-space@master
      with:
        root-reserve-mb: 38912
        swap-size-mb: 512
        temp-reserve-mb: 512
        remove-dotnet: 'true'
        remove-android: 'true'
        remove-haskell: 'true'
        remove-codeql: 'true'
        remove-docker-images: 'true'
    - uses: actions/checkout@v2
    - uses: actions/cache@v1
      env:
        CACHE_NUMBER: 0
      with:
        path: ~/conda_pkgs_dir
        key: ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{ hashFiles('conda/build-environment.yaml') }}
    - uses: conda-incubator/setup-miniconda@v3
      with:
        python-version: ${{ matrix.python-version }}
        activate-environment: tlcpack-build
        channels: conda-forge,defaults
        channel-priority: disabled
        environment-file: conda/build-environment.yaml
        auto-activate-base: false
        use-only-tar-bz2: true
        use-mamba: false
    - name: Conda info
      run: |
        conda info
        conda list
    - name: TVM checkout
      run: |
        git clone https://github.com/apache/tvm tvm --recursive
    - name: Sync Package
      run: python common/sync_package.py --cuda ${{ matrix.config.cuda }} ${{ matrix.pkg }}
    - name: Build
      env:
        IMAGE: ${{ matrix.config.image }}
        CUDA: ${{ matrix.config.cuda }}
      run: |
        df  # Print disk space?
        docker/bash.sh --no-gpu $IMAGE ./conda/build_cuda.sh conda/build_config.yaml --cuda $CUDA
        df
    - name: Conda-Deploy
      if: github.ref == 'refs/heads/main' && github.repository == 'tlc-pack/tlcpack'
      shell: bash -l {0}
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_TOKEN }}
      run: >-
        anaconda upload --force --label main conda/pkg/linux-64/*.tar.bz2
